@model ProductVm

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-gray-500 bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center" >
                <h2>@(Model.Product.Id == 0 ? "Create" : "Edit") Product</h2>

            </div>

        </div>
        <div class="card-body p-4">


            @* here Product is from productvm  product property name *@
            @* if your input type is file then you need to use enctype="multipart/form-data" otherwise it will not work *@
            <form asp-action="Upsert" enctype="multipart/form-data">

               <div class="row">
                   <div class="col-10">
                        <input type="hidden" asp-for="Product.Id" />
                        <input type="hidden" asp-for="Product.ImageUrl" />
                        <div class="form-group">
                            <label asp-for="Product.Title" class="control-label"></label>
                            <input asp-for="Product.Title" class="form-control" />
                            <span asp-validation-for="Product.Title" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Product.Description" class="control-label"></label>
                            <textarea asp-for="Product.Description" class="form-control"></textarea>
                        </div>

                        <div class="form-group">
                            <label asp-for="Product.ISBN" class="control-label"></label>
                            <input asp-for="Product.ISBN" class="form-control" />
                            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Product.Author" class="control-label"></label>
                            <input asp-for="Product.Author" class="form-control" />
                            <span asp-validation-for="Product.Author" class="text-danger"></span>
                        </div>




                        <div class="form-group">
                            <label asp-for="Product.ListPrice" class="control-label"></label>
                            <input asp-for="Product.ListPrice" type="number" class="form-control" />
                            <span asp-validation-for="Product.ListPrice" type="number" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Product.Price50" class="control-label"></label>
                            <input asp-for="Product.Price50" type="number" class="form-control" />
                            <span asp-validation-for="Product.Price50" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Product.Price100" class="control-label"></label>
                            <input asp-for="Product.Price100" type="number" class="form-control" />
                            <span asp-validation-for="Product.Price100" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Product.ImageUrl" class="control-label"></label>
                            <input asp-for="Product.ImageUrl" name="file" type="file" class="form-control" />
                        </div>

                        @*       asp-items="@(ViewData["CategoryList"] as IEnumerable<SelectList>)" this works same as view bag  *@

                        @*               viewbag internally  inserts the data into viewdata dictinory .so the key of viewdata and property of viewbag must not match
 *@            
                    <div class="form-group py-2 mt-2">
                            <label asp-for="Product.CategoryId" class="control-label"></label>
                            <select asp-for="Product.CategoryId" asp-items="Model.CategoryList" class="form-select">
                                <option disabled selected>--select the option--</option>
                            </select>


                            @* <span asp-validation-for="Product.CategoryId" type="number" class="text-danger"></span> *@
                        </div>

                        @if (Model.Product.Id == 0 || Model.Product.Id == null)
                        {
                            <button type="submit" class="btn btn-primary">Create</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-primary">Edit</button>

                        }
                        <a asp-action="Index" class="btn btn-secondary" style="position: absolute; right: 0;">Cancel</a>
                   </div>
                   <div class="col-2">
                       <img src="@Model.Product.ImageUrl" width="100%
                        style="border-radius:5px;border:1px solid #bbbbbb"/>
                   </div>
               </div>

            </form>
        </div>

   </div>

</div>


@section Scripts {
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Apr 21, 2025:
            'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    <partial Title="_ValidationScriptsPartial" />
}
